@startuml

' actor Actor
' autonumber
startup()-> initializePartitionState(): 调用updateAssignedReplicasForPartition()方法
initializePartitionState()-> startup():获取partitionReplicaAssignment变量

startup()-> triggerOnlinePartitionStateChange()
triggerOnlinePartitionStateChange()-> handleStateChanges() 

handleStateChanges()-> controllerChannelManager: 调用newBatch()方法
controllerChannelManager-> handleStateChanges():无返回值

handleStateChanges()-> doHandleStateChanges()

doHandleStateChanges()-> initializeLeaderAndIsrForPartitions()
initializeLeaderAndIsrForPartitions()-> controllerChannelManager: 调用addLeaderAndIsrRequestForBrokers()方法
controllerChannelManager-> initializeLeaderAndIsrForPartitions(): 无返回值
initializeLeaderAndIsrForPartitions()-> doHandleStateChanges()

doHandleStateChanges()-> electLeaderForPartitions()
electLeaderForPartitions()-> doElectLeaderForPartitions()

doElectLeaderForPartitions()-> leaderForOffline()
leaderForOffline()-> doElectLeaderForPartitions()
doElectLeaderForPartitions()-> leaderForReassign()
leaderForReassign()-> doElectLeaderForPartitions()
doElectLeaderForPartitions()-> leaderForPreferredReplica() 
leaderForPreferredReplica()-> doElectLeaderForPartitions()
doElectLeaderForPartitions()-> leaderForControlledShutdown()
leaderForControlledShutdown()-> doElectLeaderForPartitions() 

doElectLeaderForPartitions()-> electLeaderForPartitions() 
electLeaderForPartitions()-> doHandleStateChanges()

dohandleStateChanges()-> HandleStateChanges()

handleStateChanges()-> controllerChannelManager: 调用sendRequestsToBrokers()方法
controllerChannelManager-> handleStateChanges():无返回值

triggerOnlinePartitionStateChange()-> startup()
handleStateChanges()-> triggerOnlinePartitionStateChange() 

' kafka_controller-> kafka_controller: 调用moveReassignedPartitionLeaderIfRequired()方法
' kafka_controller-> partitionStateMachine: 调用handleStateChanges()方法
' partitionStateMachine-> partitionStateMachine: 调用dohandleStateChanges()方法
' partitionStateMachine-> kafka_controller: 无返回值

' kafka_controller-> kafka_controller: 调用stopOldReplicasOfReassignedPartition()方法
' kafka_controller-> replicaStateMachine: 调用handleStateChanges()方法
' replicaStateMachine-> replicaStateMachine: 调用dohandleStateChanges()方法
' replicaStateMachine-> kafka_controller: 无返回值

' kafka_controller-> kafka_controller: 调用updateAssignedReplicasForPartition()方法
' kafka_controller-> partitionStateMachine: 调用handleStateChanges()方法
' partitionStateMachine-> partitionStateMachine: 调用dohandleStateChanges()方法
' partitionStateMachine-> kafka_controller: 无返回值

' kafka_controller-> kafka_controller: 调用sendUpdateMetadataRequest()方法
' kafka_controller-> controllerChannelManager: 调用addUpdateMetadataRequestForBrokers()，sendRequestsToBrokers()方法
' controllerChannelManager-> kafka_controller: 无返回值

' kafka_controller-> topicDeletionManager: 调用resumeDeletionForTopics()方法
' topicDeletionManager-> kafka_controller: 无返回值

' kafka_controller-> kafka_controller: 调用updateLeaderEpochAndSendRequest()方法
' kafka_controller-> kafka_controller: 调用updateLeaderEpochAndSendRequest()方法
' kafka_controller-> kafka_controller: 调用updateLeaderEpochAndSendRequest()方法
' kafka_controller-> kafka_controller: 调用updateLeaderEpochAndSendRequest()方法
' kafka_controller-> kafka_controller: 调用updateLeaderEpochAndSendRequest()方法
' kafka_controller-> kafka_controller: 调用updateLeaderEpochAndSendRequest()方法
' Server->Device:调用write()方法
' Device-->Server:方法返回，无返回值
' Client->Server:调用close()方法
' Server-->Client:方法返回，无返回值
' Client-->Actor:程序执行完毕

@enduml